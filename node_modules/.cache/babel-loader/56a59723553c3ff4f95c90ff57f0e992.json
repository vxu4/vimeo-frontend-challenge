{"ast":null,"code":"import _taggedTemplateLiteral from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/victoriaxu/Documents/2019:20/vimeo-test/my-app/src/components/carousel.js\";\n\nfunction _templateObject10() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  border-color: \", \";\\n  border: 1px solid \", \";\\n\"]);\n\n  _templateObject10 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 150px;\\n    height: 50px;\\n    border-radius: 5px;\\n    margin: 10px;\\n    color: \", \";\\n    background-color: \", \";\\n    border: none;\\n    font-size: 17px;\\n    font-weight: bold;\\n\"]);\n\n  _templateObject9 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  const data = _taggedTemplateLiteral([\"\\n    grid-column: 3 / 4;\\n    grid-row: 3 / 4;\\n\"]);\n\n  _templateObject8 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 150px;\\n    height: 250px;\\n    grid-column: 2 / 3;\\n    grid-row: 1 / 4;\\n\"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    margin: 0px;\\n    padding: 0px;\\n    color: \", \";\\n    grid-column: 3 / 4;\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    color: \", \";\\n    margin: 0px;\\n    padding: 0px;\\n    font-weight: 500;\\n    grid-column: 3 / 4;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    padding: 0px 50px;\\n    grid-column: \", \";\\n    grid-row: 2 / 3;\\n    color: \", \";\\n    font-size: 70px;\\n    width: 100%;\\n\\n    :hover {\\n        cursor: pointer;\\n        color: \", \";\\n    }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    grid-template-columns: auto 300px 500px auto;\\n    grid-template-rows: auto auto auto;\\n    background-color: \", \";\\n    display: grid;  \\n    align-content: center;\\n    // justify-items: center;\\n    align-items: center;\\n    justify-content: center;\\n    // grid-column: 1 / 5;\\n    // grid-row: 1 / 2;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 500px;\\n    margin: 0px;\\n    padding: 0px;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    background-position: 50% 60%;\\n    background-size: cover;\\n    background-repeat: no-repeat;\\n    background-image: url(\", \");\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    width: 100%;\\n    -webkit-filter: blur(10px);\\n    filter: blur(10px);\\n    height: 500px;\\n    margin: 0px;\\n    padding: 0px;\\n    grid-row: 1 / 2;\\n    grid-column: 1 / 5;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport TextBlurb from \"./textBlurb\";\nimport styled from \"styled-components\";\nimport { ThemeProvider } from \"styled-components\";\nimport device from \"./styles/device\";\nimport sizes from \"./styles/device-sizes\";\nimport colors from \"./styles/palette\";\nimport carouselThumbnails from \"../assets/carouselThumbnails\"; //TODO: this should be a function that takes in a list of images and does the same thing for all of them\n\nconst ImageSlide = styled.img(_templateObject()); // const Slide = ({ image }) => {\n//     const styles = {\n//       backgroundImage: `url(${image})`,\n//       backgroundSize: 'cover',\n//       backgroundRepeat: 'no-repeat',\n//       backgroundPosition: '50% 60%'\n//     }\n//     return <div className=\"slide\" style={styles}></div>\n// }\n\nconst Slide = styled.div(_templateObject2(), props => props.image); // const Arrow = ({ direction, clickFunction, glyph }) => (\n//     <div\n//       className={ `slide-arrow ${direction}` }\n//       onClick={ clickFunction }>\n//       { glyph }\n//     </div> \n//   );\n\nconst OverLay = styled.div(_templateObject3(), props => props.theme.transparent);\nconst Arrow = styled.div(_templateObject4(), props => props.right ? \"4 / 5\" : \"1 / 2\", colors.white1Transparent, colors.blue1);\nconst Title = styled.h1(_templateObject5(), colors.white1);\nconst TextThumbnail = styled.p(_templateObject6(), colors.white1Transparent);\nconst ImgThumbnail = styled.img(_templateObject7());\nconst ButtonContainer = styled.div(_templateObject8());\nconst Button = styled.button(_templateObject9(), colors.white1, props => props.theme.main);\nconst TrailerButon = styled(Button)(_templateObject10(), colors.transparent, colors.white1Transparent, colors.white1Transparent);\nconst goldTheme = {\n  main: colors.gold1,\n  transparent: colors.gold1Transparent\n};\nconst blueTheme = {\n  main: colors.blue1,\n  transparent: colors.blue1Transparent\n};\nconst tealTheme = {\n  main: colors.teal1,\n  transparent: colors.teal1Transparent\n};\nconst grayTheme = {\n  main: colors.charcoal2,\n  transparent: colors.charcoal1Transparent\n};\n\nclass Carousel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.slideWidth = () => {\n      console.log(window.innerWidth);\n      return window.innerWidth;\n    };\n\n    this.state = {\n      currIndex: 0,\n      translateValue: 0\n    };\n    this.nextSlide = this.nextSlide.bind(this);\n    this.previousSlide = this.previousSlide.bind(this);\n  }\n\n  previousSlide() {\n    // const lastIndex = carouselThumbnails.length - 1;\n    // const { currIndex } = this.state;\n    // const shouldResetIndex = currIndex === 0;\n    // const index =  shouldResetIndex ? lastIndex : currIndex - 1;\n    // this.setState({\n    //     currIndex: index\n    // });\n    if (this.state.currentIndex === 0) return;\n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex - 1,\n      translateValue: prevState.translateValue + this.slideWidth()\n    }));\n  }\n\n  nextSlide() {\n    // const lastIndex = carouselThumbnails.length - 1;\n    // const { currIndex } = this.state;\n    // const shouldResetIndex = currIndex === lastIndex;\n    // const index =  shouldResetIndex ? 0 : currIndex + 1;\n    // this.setState({\n    //     currIndex: index\n    // });\n    if (this.state.currentIndex === carouselThumbnails.length - 1) {\n      return this.setState({\n        currentIndex: 0,\n        translateValue: 0\n      });\n    } // This will not run if we met the if condition above\n\n\n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex + 1,\n      translateValue: prevState.translateValue + -this.slideWidth()\n    }));\n  }\n\n  render() {\n    const themes = [blueTheme, tealTheme, goldTheme, grayTheme];\n    carouselThumbnails.map((value, index) => {\n      value.theme = themes[index];\n      return value;\n    });\n    const thumbnail = carouselThumbnails[this.state.currIndex];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-wrapper\",\n      style: {\n        transform: \"translateX(\".concat(this.state.translateValue, \"px)\"),\n        transition: 'transform ease-out 0.45s'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, carouselThumbnails.map((thumbnail, i) => React.createElement(Slide, {\n      key: i,\n      image: thumbnail.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(ThemeProvider, {\n      theme: thumbnail.theme,\n      class: \"slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(OverLay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(ImgThumbnail, {\n      src: thumbnail.imgUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, thumbnail.title), React.createElement(TextThumbnail, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, thumbnail.description), React.createElement(ButtonContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Buy Now\"), React.createElement(TrailerButon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Watch Trailer\"))))))), React.createElement(Arrow, {\n      id: \"left\",\n      onClick: this.prevSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"<\"), React.createElement(Arrow, {\n      right: true,\n      id: \"right\",\n      onClick: this.nextSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \">\"));\n  }\n\n}\n\nexport default Carousel;","map":{"version":3,"sources":["/Users/victoriaxu/Documents/2019:20/vimeo-test/my-app/src/components/carousel.js"],"names":["React","TextBlurb","styled","ThemeProvider","device","sizes","colors","carouselThumbnails","ImageSlide","img","Slide","div","props","image","OverLay","theme","transparent","Arrow","right","white1Transparent","blue1","Title","h1","white1","TextThumbnail","p","ImgThumbnail","ButtonContainer","Button","button","main","TrailerButon","goldTheme","gold1","gold1Transparent","blueTheme","blue1Transparent","tealTheme","teal1","teal1Transparent","grayTheme","charcoal2","charcoal1Transparent","Carousel","Component","constructor","slideWidth","console","log","window","innerWidth","state","currIndex","translateValue","nextSlide","bind","previousSlide","currentIndex","setState","prevState","length","render","themes","map","value","index","thumbnail","transform","transition","i","imgUrl","title","description","prevSlide"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextBlurb from \"./textBlurb\";\nimport styled from \"styled-components\";\nimport { ThemeProvider } from \"styled-components\";\nimport device from \"./styles/device\";\nimport sizes from \"./styles/device-sizes\";\nimport colors from \"./styles/palette\";\nimport carouselThumbnails from \"../assets/carouselThumbnails\";\n\n//TODO: this should be a function that takes in a list of images and does the same thing for all of them\n\nconst ImageSlide = styled.img`\n\n    width: 100%;\n    -webkit-filter: blur(10px);\n    filter: blur(10px);\n    height: 500px;\n    margin: 0px;\n    padding: 0px;\n    grid-row: 1 / 2;\n    grid-column: 1 / 5;\n`;\n\n        // const Slide = ({ image }) => {\n        //     const styles = {\n        //       backgroundImage: `url(${image})`,\n        //       backgroundSize: 'cover',\n        //       backgroundRepeat: 'no-repeat',\n        //       backgroundPosition: '50% 60%'\n        //     }\n        //     return <div className=\"slide\" style={styles}></div>\n        // }\n\nconst Slide = styled.div`\n    background-position: 50% 60%;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-image: url(${props => props.image});\n`;\n\n\n\n\n// const Arrow = ({ direction, clickFunction, glyph }) => (\n//     <div\n//       className={ `slide-arrow ${direction}` }\n//       onClick={ clickFunction }>\n//       { glyph }\n//     </div> \n//   );\n\nconst OverLay = styled.div`\n    grid-template-columns: auto 300px 500px auto;\n    grid-template-rows: auto auto auto;\n    background-color: ${props => props.theme.transparent};\n    display: grid;  \n    align-content: center;\n    // justify-items: center;\n    align-items: center;\n    justify-content: center;\n    // grid-column: 1 / 5;\n    // grid-row: 1 / 2;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 500px;\n    margin: 0px;\n    padding: 0px;\n`;\n\nconst Arrow = styled.div`\n    padding: 0px 50px;\n    grid-column: ${props => props.right ? \"4 / 5\" : \"1 / 2\"};\n    grid-row: 2 / 3;\n    color: ${colors.white1Transparent};\n    font-size: 70px;\n    width: 100%;\n\n    :hover {\n        cursor: pointer;\n        color: ${colors.blue1};\n    }\n`;\n\nconst Title = styled.h1 `\n    color: ${colors.white1};\n    margin: 0px;\n    padding: 0px;\n    font-weight: 500;\n    grid-column: 3 / 4;\n`;\n\nconst TextThumbnail = styled.p`\n    margin: 0px;\n    padding: 0px;\n    color: ${colors.white1Transparent};\n    grid-column: 3 / 4;\n`;\n\nconst ImgThumbnail = styled.img`\n    width: 150px;\n    height: 250px;\n    grid-column: 2 / 3;\n    grid-row: 1 / 4;\n`;\n\nconst ButtonContainer = styled.div`\n    grid-column: 3 / 4;\n    grid-row: 3 / 4;\n`;\n\nconst Button = styled.button`\n    width: 150px;\n    height: 50px;\n    border-radius: 5px;\n    margin: 10px;\n    color: ${colors.white1};\n    background-color: ${props => props.theme.main};\n    border: none;\n    font-size: 17px;\n    font-weight: bold;\n`;\n\nconst TrailerButon = styled(Button)`\n  background-color: ${colors.transparent};\n  border-color: ${colors.white1Transparent};\n  border: 1px solid ${colors.white1Transparent};\n`;\n\nconst goldTheme = {\n    main: colors.gold1,\n    transparent: colors.gold1Transparent\n}\n\nconst blueTheme = {\n    main: colors.blue1,\n    transparent: colors.blue1Transparent\n}\n\nconst tealTheme = {\n    main: colors.teal1,\n    transparent: colors.teal1Transparent\n}\n\nconst grayTheme = {\n    main: colors.charcoal2,\n    transparent: colors.charcoal1Transparent\n}\n\nclass Carousel extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            currIndex: 0,\n            translateValue: 0\n        };\n        this.nextSlide = this.nextSlide.bind(this);\n        this.previousSlide = this.previousSlide.bind(this);\n      }\n\n    previousSlide () {\n        // const lastIndex = carouselThumbnails.length - 1;\n        // const { currIndex } = this.state;\n        // const shouldResetIndex = currIndex === 0;\n        // const index =  shouldResetIndex ? lastIndex : currIndex - 1;\n\n        // this.setState({\n        //     currIndex: index\n        // });\n        if(this.state.currentIndex === 0)\n        return;\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex - 1,\n        translateValue: prevState.translateValue + this.slideWidth()\n      }))\n    }\n\n    nextSlide () {\n        // const lastIndex = carouselThumbnails.length - 1;\n        // const { currIndex } = this.state;\n        // const shouldResetIndex = currIndex === lastIndex;\n        // const index =  shouldResetIndex ? 0 : currIndex + 1;\n\n        // this.setState({\n        //     currIndex: index\n        // });\n        if(this.state.currentIndex === carouselThumbnails.length - 1) {\n            return this.setState({\n              currentIndex: 0,\n              translateValue: 0\n            })\n          }\n          \n          // This will not run if we met the if condition above\n          this.setState(prevState => ({\n            currentIndex: prevState.currentIndex + 1,\n            translateValue: prevState.translateValue + -(this.slideWidth())\n          }));\n    }\n    slideWidth = () => {\n        console.log(window.innerWidth);\n        return window.innerWidth;\n     }\n    render () {\n\n        const themes = [blueTheme, tealTheme, goldTheme, grayTheme];\n        carouselThumbnails.map((value, index) => {\n            value.theme = themes[index];\n            return value;\n        });\n        const thumbnail = carouselThumbnails[this.state.currIndex];\n        return (\n            <div>\n                <div className=\"slider-wrapper\"\n                    style={{\n                    transform: `translateX(${this.state.translateValue}px)`,\n                    transition: 'transform ease-out 0.45s'\n                    }}>\n                    {\n                    carouselThumbnails.map((thumbnail, i) => (\n                        <Slide key={i} image={thumbnail.image}>\n                            <ThemeProvider theme={thumbnail.theme} class=\"slide\">\n                                {/* <ImageSlide src={thumbnail.imgUrl} /> */}\n                                <OverLay>\n\n                                    <ImgThumbnail src={thumbnail.imgUrl}></ImgThumbnail>\n                                    <Title>{thumbnail.title}</Title>\n                                    <TextThumbnail>{thumbnail.description}</TextThumbnail>\n                                    <ButtonContainer>\n                                        <Button>Buy Now</Button>\n                                        <TrailerButon>Watch Trailer</TrailerButon>\n                                    </ButtonContainer>\n\n                                </OverLay>\n                            </ThemeProvider>\n                        </Slide>\n                    ))\n                    }\n                </div>\n\n                <Arrow\n                    id=\"left\"\n                    onClick={ this.prevSlide }>\n                    &#60;\n                </Arrow>\n\n                <Arrow right\n                    id=\"right\"\n                    onClick={ this.nextSlide }>\n                    &#62;\n                </Arrow>\n            {/* <Slide class=\"slide\" image={thumbnail.imgUrl}> */}\n            </div>\n        );\n    }\n  }\n\n  export default Carousel;"]},"metadata":{},"sourceType":"module"}